name: Notify Slack on Failure of Pages Deployment

on:
  workflow_run:
    workflows:
      - "pages-build-deployment" # GitHub Pagesのデプロイメント用Workflow
    types:
      - completed

jobs:
  notify-slack:
    if: ${{ github.event.workflow_run.conclusion == 'failure' }} # デプロイが失敗した場合のみ実行
    runs-on: ubuntu-latest

    steps:
      - name: Extract repository name
        id: extract-repo-name
        run: echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install requests
        run: pip install requests

      - name: Send notification to Slack using Python
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}  # GitHub Secretsから取得
          COMMIT_AUTHOR: ${{ github.event.workflow_run.actor }}
          COMMIT_SHA: ${{ github.event.workflow_run.head_commit.id }}
          REPOSITORY_NAME: ${{ env.REPOSITORY_NAME }}
        run: |
          import requests
          import os
          import json

          # Slack Webhook URLを環境変数から取得
          webhook_url = os.getenv('SLACK_WEBHOOK_URL')
          
          # メッセージデータ
          payload = {
              "text": f"🚨 GitHubActions DeployFailed! 🚨\n\n<{os.getenv('REPOSITORY_NAME')}>のデプロイに失敗しました。\n\n対象コミット: <{os.getenv('COMMIT_SHA')}> by {os.getenv('COMMIT_AUTHOR')}\n\n対応着手時・完了後、本チャンネルにて経緯を報告ください。"
          }

          # POSTリクエストを送信
          response = requests.post(
              webhook_url,
              data=json.dumps(payload),
              headers={'Content-Type': 'application/json'}
          )

          # レスポンスを確認
          if response.status_code == 200:
              print("メッセージが送信されました!")
          else:
              print(f"エラーが発生しました: {response.status_code} - {response.text}")
